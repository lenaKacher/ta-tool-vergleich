name: CI Workflow

on:
  workflow_dispatch:
    inputs:
      RUN_SELENIUM_JAVA:
        type: boolean
        default: false
      RUN_SELENIUM_POP:
        type: boolean
        default: false
      RUN_SELENIUM_JS:
        type: boolean
        default: false
      RUN_PLAYWRIGHT_JAVA:
        type: boolean
        default: false
      RUN_PLAYWRIGHT_JS:
        type: boolean
        default: false
      RUN_CYPRESS_JS:
        type: boolean
        default: false
      NUMBER_OF_RUNS:
        type: string
        default: '2'

jobs:
  selenium_java:
    runs-on: self-hosted
    if: inputs.RUN_SELENIUM_JAVA
          
    steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Java
       uses: actions/setup-java@v3
       with:
         distribution: 'temurin'
         java-version: '17'

     # - name: Set up Testcontainers environment
     #   run: |
     #      echo "DOCKER_HOST=unix:///var/run/docker.sock" >> $GITHUB_ENV
     #      echo "TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock" >> $GITHUB_ENV
     #      echo "TESTCONTAINERS_RYUK_DISABLED=true" >> $GITHUB_ENV
          
     - name: disable Ryuk
       run: |
          export TESTCONTAINERS_RYUK_DISABLED=true
          echo $TESTCONTAINERS_RYUK_DISABLED
          
     # - name: Check Docker Connectivity
     #   run: docker pull selenium/standalone-chrome:latest

     # - name: Docker Info
     #   run: |
     #        docker version
     #        docker ps
       
     - name: Run Selenium Java tests
       run: |
          cd selenium/java
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
             mvn clean test || true
             done
          cp timings.csv selenium-java.csv
     
     - name: Upload Selenium Java results
       uses: actions/upload-artifact@v4
       with:
         name: selenium-java-results
         path: selenium/java/selenium-java.csv
         if-no-files-found: ignore

     - name: Upload screenshots
       uses: actions/upload-artifact@v4
       with:
          name: selenium-screenshots
          path: selenium/java/screenshots/
          if-no-files-found: ignore

  selenium_pop:
    runs-on: self-hosted
    if: inputs.RUN_SELENIUM_POP
          
    steps:
     - name: Checkout code
       uses: actions/checkout@v3
      
     - name: Set up Java
       uses: actions/setup-java@v3
       with:
         distribution: 'temurin'
         java-version: '17'

     # - name: Set up Testcontainers environment
     #   run: |
     #      echo "DOCKER_HOST=unix:///var/run/docker.sock" >> $GITHUB_ENV
     #      echo "TESTCONTAINERS_DOCKER_SOCKET_OVERRIDE=/var/run/docker.sock" >> $GITHUB_ENV
     #      echo "TESTCONTAINERS_RYUK_DISABLED=true" >> $GITHUB_ENV

     - name: Run Selenium Java Page Object Pattern tests
       run: |
          cd selenium/java_PageObjectPattern
             for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
             mvn clean test || true
          done
          cp timings.csv selenium-java-pop.csv
          
     - name: Debug timings.csv and selenium-java-pop.csv
       run: |
          cd selenium/java_PageObjectPattern
          ls -la
   
     - name: Copy timings.csv to selenium-java-pop.csv
       uses: actions/upload-artifact@v4
       with:
          name: selenium-java-pop.csv
          path: selenium/java_PageObjectPattern/selenium-java-pop.csv
          if-no-files-found: ignore

     - name: Upload screenshots
       uses: actions/upload-artifact@v4
       with:
          name: selenium-screenshots
          path: selenium/java_PageObjectPattern/screenshots/
          if-no-files-found: ignore

  selenium_js:
    runs-on: self-hosted
    if: inputs.RUN_SELENIUM_JS
      
    steps:
     - name: Checkout code
       uses: actions/checkout@v3

     - name: Set up Node.js
       uses: actions/setup-node@v3
       with:
          node-version: '18'

     - name: Run Selenium JavaScript tests
       run: |
          cd selenium/js
          npm ci
             for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
             npm run test || true
          done
          cp timings.csv selenium-js.csv
     - name: Upload Selenium JS results
       uses: actions/upload-artifact@v4
       with:
          name: selenium-js-results
          path: selenium/js/selenium-js.csv
          if-no-files-found: ignore

     - name: Upload screenshots
       uses: actions/upload-artifact@v4
       with:
          name: selenium-screenshots
          path: selenium/js/screenshots/
          if-no-files-found: ignore
          
  playwright-javaScript:
    runs-on: self-hosted
    if: inputs.RUN_PLAYWRIGHT_JS
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    container:
      image: ubuntu:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Run Playwright JavaScript Tests
        if: inputs.RUN_PLAYWRIGHT_JS
        run: |
          cd playwright/js
          npm ci
          npx playwright install
          npx playwright install-deps
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
              npm run test || true
          done           
          cp timings.csv playwright-js.csv
   
      - name: Copy timings.csv to playwright-js.csv
        uses: actions/upload-artifact@v4
        with:
          name: playwright-js.csv
          path: playwright/js/playwright-js.csv
          if-no-files-found: ignore
          
      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
           name: selenium-screenshots
           path: playwright/js/screenshots/
           if-no-files-found: ignore
           
  playwright-java:
    runs-on: self-hosted
    if: inputs.RUN_PLAYWRIGHT_JAVA
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    container:
      image: ubuntu:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # - name: Install dependencies
      #   run: |
      #     apt-get update
      #     apt-get install -y curl tar
          
      # - name: Install Maven
      #   run: |
      #     MAVEN_VERSION=3.8.8
      #     curl -fsSL https://downloads.apache.org/maven/maven-3/3.8.8/binaries/apache-maven-3.8.8-bin.tar.gz -o maven.tar.gz
      #     tar -xzf maven.tar.gz -C /opt/
      #     ln -s /opt/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn
      - name: Run Playwright Java Tests
        if: inputs.RUN_PLAYWRIGHT_JAVA
        run: |
          cd playwright/java
          mvn exec:java -e -Dexec.mainClass=com.microsoft.playwright.CLI -Dexec.args='install-deps' 
          mvn test-compile 
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
             mvn clean test || true
          done 
          cp timings.csv playwright-java.csv
      - name: Debug timings.csv and playwright-java.csv
        run: |
          cd playwright/java
          ls -la
   
      - name: Copy timings.csv to playwright-java.csv
        uses: actions/upload-artifact@v4
        with:
          name: playwright-java.csv
          path: playwright/java/playwright-java.csv
          if-no-files-found: ignore

  cypress-js:
    runs-on: self-hosted
    if: inputs.RUN_CYPRESS_JS
    services:
      docker:
        image: docker:dind
        options: --privileged --shm-size=2g
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
    container:
      image: ubuntu:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y libgtk2.0-0 libgtk-3-0 libgbm-dev libnotify-dev libnss3 libxss1 libasound2t64 libxtst6 xauth xvfb
      - name: Run Cypress Tests
        if: inputs.RUN_CYPRESS_JS
        run: |
          cd cypress/js
          npm ci
          export XDG_RUNTIME_DIR=/tmp/xdg
          mkdir -p $XDG_RUNTIME_DIR
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
              npm run test || true
          done           
          cp timings.csv playwright-js.csv
      - name: Debug timings.csv and cypress-js.csv
        run: |
          cd cypress/js
          ls -la
   
      - name: Copy timings.csv to cypress-js.csv
        uses: actions/upload-artifact@v4
        with:
          name: cypress-js.csv
          path: cypress/js/cypress-js.csv
          if-no-files-found: ignore

      - name: Upload Cypress Screenshots
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: ta-tool-vergleich/cypress/js/cypress/screenshots/
          if-no-files-found: ignore
