name: Test Pipeline

on:
  workflow_dispatch:
    inputs:
      RUN_SELENIUM_JAVA:
        description: "Run Selenium Java tests"
        required: false
        default: "true"
      RUN_SELENIUM_POP:
        description: "Run Selenium Page Object Pattern tests"
        required: false
        default: "false"
      RUN_SELENIUM_JS:
        description: "Run Selenium JavaScript tests"
        required: false
        default: false
      RUN_PLAYWRIGHT_JAVA:
        description: "Run Playwright Java tests"
        required: false
        default: false
      RUN_PLAYWRIGHT_JS:
        description: "Run Playwright JavaScript tests"
        required: false
        default: false
      RUN_CYPRESS_JS:
        description: "Run Cypress JavaScript tests"
        required: false
        default: false
  pull_request:

jobs:
  selenium:
    name: Selenium Tests
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Check Bash Location
        run: which bash

      - name: Ensure Git Bash is First in PATH
        run: echo "C:\\Users\\okacher\\AppData\\Local\\Programs\\Git\\bin:$PATH" >> $GITHUB_ENV

      - name: Install Dev Container CLI
        run: npm install -g @devcontainers/cli

      - name: Add npm Global Path to PATH
        run: echo "C:\Users\okacher\AppData\Roaming\npm;$env:PATH" >> $GITHUB_ENV
        
      - name: Build Dev Container
        run: devcontainer build --workspace-folder .
        
      # - name: Set up Dev Container CLI
      #   uses: devcontainers/ci@v0.3
      #   with:
      #     devcontainer-path: .devcontainer/devcontainer.json

      - name: Start Dev Container
        run: |
          devcontainer up --workspace-folder .
          devcontainer exec --workspace-folder . -- docker --version

      - name: Verify Docker Daemon
        run: |
          devcontainer exec --workspace-folder . -- docker info

      - name: Debug Parameters
        run: |
          echo "RUN_SELENIUM_JAVA=${{ inputs.RUN_SELENIUM_JAVA }}"
          echo "RUN_SELENIUM_POP=${{ inputs.RUN_SELENIUM_POP }}"
          echo "RUN_SELENIUM_JS=${{ inputs.RUN_SELENIUM_JS }}"
          echo "RUN_PLAYWRIGHT_JAVA=${{ inputs.RUN_PLAYWRIGHT_JAVA }}"
          echo "RUN_PLAYWRIGHT_JS=${{ inputs.RUN_PLAYWRIGHT_JS }}"
          echo "RUN_CYPRESS_JS=${{ inputs.RUN_CYPRESS_JS }}"

      - name: Run Selenium Java Tests
        if: ${{ inputs.RUN_SELENIUM_JAVA == 'true' }}
        run: |
          devcontainer exec --workspace-folder . -- bash -c "
            cd selenium/java
            mvn test-compile
            NUMBER_OF_RUNS=5
            for i in \$(seq 1 \$NUMBER_OF_RUNS); do
              mvn clean test || true
            done
            cp timings.csv selenium-java.csv
          "
          cp timings.csv selenium-java.csv

      - name: Run Selenium Java - Page Objects Tests
        if: ${{ inputs.RUN_SELENIUM_POP == 'true' }}
        run: |
          cd selenium/java_PageObjectPattern
          mvn test-compile
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
            mvn clean test || true
          done
          cp timings.csv selenium-java-pop.csv

      - name: Run Selenium JavaScript Tests
        if: ${{ inputs.RUN_SELENIUM_JS == 'true' }}
        run: |
          cd selenium/js
          npm ci
          for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
            npm test || true
          done
          cp timings.csv selenium-js.csv
          
      - name: Clean up
        run: devcontainer down
        
  # playwright:
  #   name: Playwright Tests
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20.15.1'

  #     - name: Run Playwright Java Tests
  #       if: ${{ inputs.RUN_PLAYWRIGHT_JAVA == 'true' }}
  #       run: |
  #         cd playwright/java
  #         mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install-deps"
  #         mvn test-compile
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           mvn clean test || true
  #         done
  #         cp timings.csv playwright-java.csv

  #     - name: Run Playwright JavaScript Tests
  #       if: ${{ inputs.RUN_PLAYWRIGHT_JS == 'true' }}
  #       run: |
  #         cd playwright/js
  #         npm ci
  #         npx playwright install
  #         npx playwright install-deps
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           npm run test || true
  #         done
  #         cp timings.csv playwright-js.csv

  # cypress:
  #   name: Cypress Tests
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20.15.1'

  #     - name: Run Cypress Tests
  #       if: ${{ inputs.RUN_CYPRESS_JS == 'true' }}
  #       run: |
  #         cd cypress/js
  #         npm ci
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           npm run test || true
  #         done
  #         cp timings.csv cypress-js.csv

  archive:
    name: Archive Results
    runs-on: self-hosted
    needs:
      - selenium
      # - playwright
      # - cypress
    steps:
      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: |
            selenium/java/selenium-java.csv
            selenium/java_PageObjectPattern/selenium-java-pop.csv
            selenium/js/selenium-js.csv
            # playwright/java/playwright-java.csv
            # playwright/js/playwright-js.csv
            # cypress/js/cypress-js.csv
