name: Test Pipeline

on:
  workflow_dispatch:
    inputs:
      RUN_SELENIUM_JAVA:
        description: "Run Selenium Java tests"
        required: false
        default: "true"
  pull_request:
jobs:
  selenium:
    name: Selenium Tests
    runs-on: self-hosted  
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Set environment variables
        run: |
          echo "MVN_VERSION=3.8.6" >> $GITHUB_ENV
          echo "NUMBER_OF_RUNS=5" >> $GITHUB_ENV
          echo "DOCKER_HOME=/var/run/docker.sock" >> $GITHUB_ENV

      - name: Pull Maven Docker Image
        run: docker pull maven:${{ env.MVN_VERSION }}

      - name: Run Selenium Java Tests
        if: ${{ inputs.RUN_SELENIUM_JAVA == 'true' }}
        run: |
          docker run --rm -v ${{ env.DOCKER_HOME }}:/var/run/docker.sock -u 0:0 --privileged --network host \
            -v $(pwd):/workspace -w /workspace/selenium/java maven:${{ env.MVN_VERSION }} \
            bash -c "
              mvn test-compile &&
              for i in \$(seq 1 ${{ env.NUMBER_OF_RUNS }}); do
                mvn clean test || true
              done &&
              cp timings.csv selenium-java.csv
            "

      - name: Archive Selenium Test Results
        if: ${{ inputs.RUN_SELENIUM_JAVA == 'true' }}
        uses: actions/upload-artifact@v3
        with:
          name: selenium-java-results
          path: selenium/java/selenium-java.csv
      
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3
        
#       - name: Install Dev Containers CLI
#         run: npm install -g @devcontainers/cli@0.3

#       - name: Check devcontainer CLI
#         run: devcontainer --version

#       - name: Start Dev Container
#         run: |
#           devcontainer up --workspace-folder .
#           devcontainer exec --workspace-folder . -- docker --version

#       - name: Verify Docker Daemon
#         run: |
#           devcontainer exec --workspace-folder . -- docker info

#       - name: Debug Parameters
#         run: |
#           echo "RUN_SELENIUM_JAVA=${{ inputs.RUN_SELENIUM_JAVA }}"

#       - name: Run Selenium Java Tests
#         if: ${{ inputs.RUN_SELENIUM_JAVA == 'true' }}
#         run: |
#           devcontainer exec --workspace-folder . -- bash -c "
#             cd selenium/java
#             mvn test-compile
#             NUMBER_OF_RUNS=5
#             for i in \'$(seq 1 \'$NUMBER_OF_RUNS\'); do
#               mvn clean test || true
#             done
#             cp timings.csv selenium-java.csv
#             "

      # - name: Run Selenium Java - Page Objects Tests
      #   if: ${{ inputs.RUN_SELENIUM_POP == 'true' }}
      #   run: |
      #     cd selenium/java_PageObjectPattern
      #     mvn test-compile
      #     for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
      #       mvn clean test || true
      #     done
      #     cp timings.csv selenium-java-pop.csv

      # - name: Run Selenium JavaScript Tests
      #   if: ${{ inputs.RUN_SELENIUM_JS == 'true' }}
      #   run: |
      #     cd selenium/js
      #     npm ci
      #     for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
      #       npm test || true
      #     done
      #     cp timings.csv selenium-js.csv
          
      # - name: Clean up
      #   run: devcontainer down
        
  # playwright:
  #   name: Playwright Tests
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20.15.1'

  #     - name: Run Playwright Java Tests
  #       if: ${{ inputs.RUN_PLAYWRIGHT_JAVA == 'true' }}
  #       run: |
  #         cd playwright/java
  #         mvn exec:java -e -D exec.mainClass=com.microsoft.playwright.CLI -D exec.args="install-deps"
  #         mvn test-compile
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           mvn clean test || true
  #         done
  #         cp timings.csv playwright-java.csv

  #     - name: Run Playwright JavaScript Tests
  #       if: ${{ inputs.RUN_PLAYWRIGHT_JS == 'true' }}
  #       run: |
  #         cd playwright/js
  #         npm ci
  #         npx playwright install
  #         npx playwright install-deps
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           npm run test || true
  #         done
  #         cp timings.csv playwright-js.csv

  # cypress:
  #   name: Cypress Tests
  #   runs-on: self-hosted
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3
  #       with:
  #         node-version: '20.15.1'

  #     - name: Run Cypress Tests
  #       if: ${{ inputs.RUN_CYPRESS_JS == 'true' }}
  #       run: |
  #         cd cypress/js
  #         npm ci
  #         for i in $(seq 1 ${{ inputs.NUMBER_OF_RUNS }}); do
  #           npm run test || true
  #         done
  #         cp timings.csv cypress-js.csv

  # archive:
  #   name: Archive Results
  #   runs-on: self-hosted
  #   needs:
  #     - selenium
  #     # - playwright
  #     # - cypress
  #   steps:
  #     - name: Upload Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: test-results
  #         path: |
  #           selenium/java/selenium-java.csv
  #           selenium/java_PageObjectPattern/selenium-java-pop.csv
  #           selenium/js/selenium-js.csv
  #           # playwright/java/playwright-java.csv
  #           # playwright/js/playwright-js.csv
  #           # cypress/js/cypress-js.csv
